#!/usr/bin/env python3
"""
Enhanced UI for AI-Socratic-Clarifier.

This script starts the enhanced web interface with:
- Symbiotic Reflective Ecosystem (SRE) integration
- Sequential of Thought (SoT) integration 
- Unified document management
- Consolidated single-window UI
"""

import os
import sys
import argparse
from loguru import logger

# Add the parent directory to the Python path
sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))

def main():
    """Run the enhanced web interface."""
    parser = argparse.ArgumentParser(description='Start the enhanced AI-Socratic-Clarifier web interface')
    parser.add_argument('--host', type=str, default='0.0.0.0', help='Host to run the server on')
    parser.add_argument('--port', type=int, default=5000, help='Port to run the server on')
    parser.add_argument('--debug', action='store_true', help='Run in debug mode')
    args = parser.parse_args()
    
    try:
        # Import Flask app
        from web_interface.app import app as flask_app
        
        # Initialize enhanced components
        from enhanced_integration.integration import get_enhanced_enhancer
        from enhanced_integration.document_manager import get_document_manager
        
        # Get enhancer and document manager to initialize them
        enhancer = get_enhanced_enhancer()
        document_manager = get_document_manager()
        
        logger.info(f"Enhanced Reflective Enhancer initialized: {enhancer.initialized}")
        logger.info(f"Document Manager initialized with storage at: {document_manager.storage_dir}")
        
        # Check if enhanced_bp is already registered to avoid duplicate registration
        is_enhanced_registered = False
        if hasattr(flask_app, 'blueprints'):
            is_enhanced_registered = 'enhanced' in flask_app.blueprints
        
        # Register enhanced routes only if not already registered
        if not is_enhanced_registered:
            from web_interface.enhanced_routes import enhanced_bp
            flask_app.register_blueprint(enhanced_bp)
            logger.info("Enhanced routes registered")
        else:
            logger.info("Enhanced routes already registered, skipping registration")
        
        # Add redirect from root to enhanced UI (ensure it's set correctly)
        def root_redirect():
            from flask import redirect
            return redirect('/enhanced')
        
        # Only add the route rule if it doesn't exist already
        root_rule_exists = False
        for rule in flask_app.url_map.iter_rules():
            if rule.rule == '/' and rule.endpoint == 'root_redirect':
                root_rule_exists = True
                break
        
        if not root_rule_exists:
            flask_app.add_url_rule('/', 'root_redirect', root_redirect, methods=['GET'])
            logger.info("Added root redirect to enhanced UI")
        
        # Run the app
        logger.info(f"Starting enhanced web interface on {args.host}:{args.port}")
        flask_app.run(host=args.host, port=args.port, debug=args.debug)
        
    except Exception as e:
        logger.error(f"Error starting the enhanced web interface: {e}")
        import traceback
        logger.error(traceback.format_exc())
        sys.exit(1)

if __name__ == '__main__':
    main()
